process Sim  = 
{

   untracked PSet maxEvents = { untracked int32 input = 50 }
   
   untracked PSet configurationMetadata = 
   {
      untracked string version = "$Revision: 1.14 $"
      untracked string name = "$Source: /cvs_server/repositories/CMSSW/CMSSW/Validation/Performance/test/minbias_detsim_digi.cfg,v $"
      untracked string annotation = "test sim chain with minbias"
   }
      
#  service = EnableFloatingPointExceptions 
#  { 
#     
#     untracked bool reportSettings = true
#     untracked bool setPrecisionDouble = true
#     
#     untracked vstring moduleNames = 
#     {
#        "default",
#	"g4SimHits"
#     }
#     untracked PSet default =
#     {
#        untracked bool enableDivByZeroEx = true
#        untracked bool enableInvalidEx = true
#        untracked bool enableOverFlowEx = true
#        untracked bool enableUnderFlowEx = true
#     }
#     untracked PSet g4SimHits =
#     {
#        untracked bool enableDivByZeroEx = false
#        untracked bool enableInvalidEx = false
#        untracked bool enableOverFlowEx = false
#        untracked bool enableUnderFlowEx = false
#     }
#  }


  ### service = Tracer {}
  
   service = MessageLogger
   {
      ###untracked vstring destinations = { "sig_debugs" }
      untracked vstring destinations = { "cout" }

      ###untracked vstring categories = { "FwkJob", "preEventProcessing" }
      ###untracked  vstring debugModules = { "*" }

      untracked PSet cout = 
      {
         
	 untracked PSet default  = { untracked int32 limit = 0 }  # kill all messages in the log
         #untracked bool noTimeStamps = true
	 #untracked string threshold = "INFO"
	 #untracked PSet preEventProcessing = { untracked int32 limit = 0  }
	 #untracked PSet FwkJob   = { untracked int32 limit = 0 } 
      }
      
      #untracked PSet sig_debugs =
      #{
      #   untracked bool noTimeStamps = true
      #	 untracked string threshold = "DEBUG"
      #	 untracked PSet preEventProcessing = { untracked int32 limit = 0  }
      #	 untracked PSet FwkJob = {  untracked int32 limit = 0  }
      #}

      # uncomment if you want it...
      #
      # untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}      
   }

   service = Timing {}
   
   service = DaqMonitorROOTBackEnd{ }
   
   module cputest = Timer {}
   service = TimerService{}
   
   
   module perftest = PerformanceAnalyzer 
   {
      untracked string outputFile = "test.root"
   }
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits = 1234
	 untracked uint32 siPixelDigis = 2345
	 untracked uint32 siStripDigis = 3456
	 untracked uint32 ecalUnsuppressedDigis = 4567
	 untracked uint32 hcalUnsuppressedDigis = 5678
	 untracked uint32 muonCSCDigis = 6789
	 untracked uint32 muonDTDigis = 7890
	 untracked uint32 muonRPCDigis = 8901
      }
   }

   include "SimGeneral/HepPDTESSource/data/pythiapdt.cfi"

   ###include "GeneratorInterface/Pythia6Interface/data/PythiaSourceMinBias.cfi"
   include "Configuration/Generator/data/PythiaMinBias.cfi"
   replace PythiaSource.pythiaHepMCVerbosity = false
   replace PythiaSource.pythiaPylistVerbosity = 0

   # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"
   
   include "SimG4Core/Configuration/data/SimG4Core.cff"
   include "Configuration/StandardSequences/data/Digi.cff"
   
   include "Configuration/StandardSequences/data/FakeConditions.cff"
   
   include "Configuration/StandardSequences/data/MixingNoPileUp.cff"
   
   # returns label  "trackingtruth"
   ###include "SimGeneral/TrackingAnalysis/data/trackingtruth.cfi" 

#
# well, I view it as a contradiction:
# in order to run *SIMULATION* chain I need to use
# cff's from the RECO side !...
# that's because FakeConditions does repalcement on
# some of the modules from the RecoLocal department...
#
include "RecoLocalTracker/Configuration/data/RecoLocalTracker.cff"
include "RecoLocalMuon/Configuration/data/RecoLocalMuon.cff"
include "RecoLocalCalo/Configuration/data/RecoLocalCalo.cff"


   path p1 = { VtxSmeared, g4SimHits, mix, doAllDigi, cputest, perftest }
   
   #includes trackingtruth business
   #include "Configuration/StandardSequences/data/Simulation.cff"
   #path p1 = { simulation }

   
}		
