process PROD  = 
{

   service = MessageLogger
   {
      untracked vstring destinations = {"cout"}

      #untracked vstring categories = { "FwkJob" }

      untracked PSet cout = 
      {
         untracked PSet default  = { untracked int32 limit = 0 }  # kill all messages in the log
	 #untracked PSet FwkJob   = { untracked int32 limit = -1 } # but FwkJob category - those unlimitted
      }

      # uncomment if you want it...
      #
      # untracked vstring fwkJobReports = {"FrameworkJobReport.xml"}      
   }

   service = Timing {}
   
   service = DaqMonitorROOTBackEnd{ }
   
   module cputest = Timer {}
   module perftest = PerformanceAnalyzer 
   {
      untracked string outputFile = "test.root"
   }
   
   service = RandomNumberGeneratorService
   {
      untracked uint32 sourceSeed = 123456789
      PSet moduleSeeds =
      {
         untracked uint32 VtxSmeared = 98765432
         untracked uint32 g4SimHits = 9876
      }
   }

   include "IOMC/GeneratorInterface/data/PythiaSourceMinBias.cfi"
   replace PythiaSource.maxEvents = 50
   replace PythiaSource.pythiaHepMCVerbosity = false
   replace PythiaSource.pythiaPylistVerbosity = 0

   # event vertex smearing - applies only once (internal check)
   # Note : all internal generatoes will always do (0,0,0) vertex
   #
   include "IOMC/EventVertexGenerators/data/VtxSmearedGauss.cfi"


   ### include "SimG4Core/Application/data/SIM-DIGI.cff"
   
   include "SimG4Core/Configuration/data/SimG4Core.cff"
   include "Configuration/StandardSequences/data/Digi.cff"
   
   include "Configuration/StandardSequences/data/FakeConditions.cff"
   
   include "Configuration/StandardSequences/data/MixingNoPileUp.cff"
   
   # returns label  "trackingtruth"
   ###include "SimGeneral/TrackingAnalysis/data/trackingtruth.cfi" 

   ### path p1 = { VtxSmeared,  doG4SimHitsDigi }
   path p1 = { VtxSmeared, g4SimHits, mix, doAllDigi, cputest, perftest }
   
   #includes trackingtruth business
   #include "Configuration/StandardSequences/data/Simulation.cff"
   #path p1 = { simulation }

   
}		
