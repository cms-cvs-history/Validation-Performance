#!/usr/bin/perl
#GBenelli Dec21 
#This script is designed to run on a local directory 
#after the user has created a local CMSSW release,
#initialized its environment variables by executing
#in the release /src directory:
#eval `scramv1 runtime -csh`
#project CMSSW
#The script will create a SimulationCandles.txt ASCII
#file, input to cmsRelvalreport.py, to launch the 
#standard simulation performance suite.

#Input arguments are three:
#1-Number of events to put in the cfg files
#2-Name of the candle(s) to process (either AllCandles, or NameOfTheCandle)
#3-Profiles to run (with code below)
#E.g.: ./cmsSimPyRelVal.pl 50 AllCandles 012

if ($#ARGV != 2) {
	print "Usage: cmsSimPyRelVal.pl NumberOfEventsPerCfgFile Candles Profile
Candles codes:
 AllCandles
 \"HZZLLLL -e 190\"
 \"MINBIAS\"
 \"E -e 1000\"
 \"MU- -e 1000\"
 \"PI- -e 1000\"
 \"TTBAR\"
 \"ZPJJ\"
Profile codes (multiple codes can be used):
 0-TimingReport
 1-TimeReport
 2-SimpleMemoryCheck
 3-EdmSize
 4-IgProfPerf
 5-IgProfMemTotal
 6-IgProfMemLive
 7-IgProfAnalyse
 8-ValgrindFCE
 9-ValgrindMemCheck
 9-SimpleMemoryCheck
E.g: cmsSimulationCandles.pl 10 AllCandles 1 OR cmsSimulationCandles.pl 50 HiggsZZ4LM190 012\n";
	exit;
}
$NumberOfEvents=$ARGV[0];
$WhichCandles=$ARGV[1];
$ProfileCode=$ARGV[2];

if ($WhichCandles eq "AllCandles")
{
    @Candle=("HZZLLLL -e 190",
	    "MINBIAS",
	    "E -e 1000",
	    "MU- -e 1000",
	    "PI- -e 1000",
	    "TTBAR",
	    "ZPJJ");
    print "ALL standard simulation candles will be PROCESSED:\n@Candle\n";
}
else
{
   
    @Candle=($WhichCandles);
    print "ONLY @Candle will be PROCESSED\n";
}

#Creating and opening the ASCII input file for the relvalreport script:
$SimCandlesFile= "SimulationCandles"."_".$CMSSW_VERSION.".txt";
open(SIMCANDLES,">$SimCandlesFile")||die "Couldn't open $SinCandlesFile to save - $!\n";
print SIMCANDLES "#Candles file automatically generated by cmsSimPyRelVal.pl for $CMSSW_VERSION\n\n";

#Here we need to run 

#./cmsDriver.py HZZLLLL -e 190 -n 50 --step=GEN --dump_python --customise=Simulation.py >& HZZLLLL_190_GEN.log&
#./cmsDriver.py HZZLLLL -e 190 -n 50 --step=SIM ---dump_python -customise=SimulationG4.py >& HZZLLLL_190_SIM.log&
#./cmsDriver.py HZZLLLL -e 190 -n 50 --step=DIGI --dump_python --customise=Simulation.py >& HZZLLLL_190_DIGI.log&
#
#No energy/momentum for MINBIAS, TTBAR, ZPJJ picks the righe RelVal automatically, right?
#./cmsDriver.py MINBIAS -n 50 --step=GEN --dump_python --customise=Simulation.py >& MINBIAS_190_GEN.log&
#./cmsDriver.py MINBIAS -n 50 --step=SIM --dump_python --customise=SimulationG4.py >& MINBIAS_190_SIM.log&
#./cmsDriver.py MINBIAS -n 50 --step=DIGI --dump_python --customise=Simulation.py >& MINBIAS_190_DIGI.log&
#
#./cmsDriver.py MU- -e 1000 -n 50 --step=DIGI --dump_python --customise=SimulationMessageLogger.py > & output2.log &

